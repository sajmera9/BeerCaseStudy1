#6. Comment on the summary statistics and distribution of the ABV variable.
summary(na_merged_data)
beer = read.csv(file.choose(), header = TRUE)
breweries = read.csv(file.choose(), header = TRUE)
library(tidyverse)
#Read both Beer and Brewery csv's
beer = read.csv(file.choose(), header = TRUE)
breweries = read.csv(file.choose(), header = TRUE)
#All states with most breweries
TotalStateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
TotalStateCount%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('All States with the Most Breweries')
StateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries')
library(tidyverse)
#All states with most breweries
TotalStateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
StateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries')
#2.   Merge beer data with the breweries data. Print the first 6 observations and the last six observations to check the merged file.  (RMD only, this does not need to be included in the presentation or the deck.)
library(dplyr)
merged_data = merge(beer, breweries, by.x = "Brewery_id", by.y = "Brew_ID")
colnames(merged_data)[2] = "Beer_Name"
colnames(merged_data)[8] = "Brewery_Name"
#Print the first and last six observations
head(merged_data,6)
tail(merged_data,6)
head_tail_merge = rbind(head_merge, tail_merge)
head_tail_merge
#Print the first and last six observations
head_merge = head(merged_data,6)
tail_merge = tail(merged_data,6)
head_tail_merge = rbind(head_merge, tail_merge)
head_tail_merge
head_tail_merge
head_tail_merge
head_tail_merge
#Address the missing values in each column.
#There are 62 missing values in ABV and 1005 missing values in 1005
library(naniar)
#Visualization of NA Values
gg_miss_var(merged_data)
#Display which columns consist of NA values
sapply(merged_data, function(x) sum(is.na(x)))
#Visualization of NA Values
gg_miss_var(merged_data)
#Display which columns consist of NA values
sapply(merged_data, function(x) sum(is.na(x)))
#Display which columns consist of NA values
sapply(merged_data, function(x) sum(is.na(x)))
#Removed the missing values in the ABV and IBU column.
na_merged_data = merged_data %>% filter(!is.na(ABV) & !is.na(IBU))
#Get the median ABV and median IBU.
median_data = na_merged_data %>% group_by(State) %>% summarize(medianABV = median(ABV), medianIBU = median(IBU))
median_data
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianABV),y=medianABV, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Highest Median Alcohol Content by State')
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianIBU),y=medianIBU, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Highest Median International Bitterness Unit by State')
maxIBU = na_merged_data %>% group_by(State) %>% summarise(MaxIBU.per.State = max(IBU)) %>% arrange(desc(MaxIBU.per.State))
head(maxIBU,3)
head(maxABV,3)
maxIBU %>%
head(3)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU')
maxIBU %>%
head(10)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU')
maxABV = na_merged_data %>% group_by(State) %>% summarise(MaxABV.per.State = max(ABV)) %>% arrange(desc(MaxABV.per.State))
maxABV%>%
head(10)%>%
ggplot(aes(x=reorder(State,MaxABV.per.State),y=MaxABV.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max ABV')
theme_USGS_box <- function(base_family = "serif", ...){
theme_bw(base_family = base_family, ...) +
theme(
panel.grid = element_blank(),
plot.title = element_text(size = 8),
axis.ticks.length = unit(-0.05, "in"),
axis.text.y = element_text(margin=unit(c(0.3,0.3,0.3,0.3), "cm")),
axis.text.x = element_text(margin=unit(c(0.3,0.3,0.3,0.3), "cm")),
axis.ticks.x = element_blank(),
aspect.ratio = 1,
legend.background = element_rect(color = "black", fill = "white")
)
}
ggplot(na_merged_data, aes( y = ABV)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('ABV Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(na_merged_data, aes( y = IBU)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('IBU Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(na_merged_data, aes( y = Ounces)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('Ounces Boxplot with Outliers in Red') + theme_USGS_box()
na_merged_data %>% ggplot(aes(x = ABV)) + geom_histogram(fill = "blue", color = "black") + ggtitle('Distribution of ABV Variable')
na_merged_data
#Another box plot
fil_na_merged_data = na_merged_data %>% select(Ounces, ABV, IBU)
fil_na_merged_data
mpg
ggplot(data = fil_na_merged_data) +
geom_boxplot() +
theme_bw()
ggplot(na_merged_data, aes( y = ABV)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('ABV Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(na_merged_data, aes( y = ABV)) + geom_boxplot(outlier.colour="blue",
outlier.size=2) + ggtitle('ABV Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(na_merged_data, aes( y = ABV)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('ABV Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(na_merged_data, aes( y = IBU)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('IBU Boxplot with Outliers in Red') + theme_USGS_box()
# fil_na_merged_data = na_merged_data %>% select(Ounces, ABV, IBU)
Oun = na_merged_data %>% select(Ounces)
# ggplot(data = edu, aes(x=Educ, y=Income2005)) +
# geom_boxplot(aes(fill=Educ)) +
# theme_bw()
# ggplot(data = fil, aes(x=Educ, y=Income2005)) +
# geom_boxplot(aes(fill=Educ)) +
# theme_bw()
ggplot(data = fil_na_merged_data, aes(y=ABV)) +
geom_boxplot(aes(fill=ABV)) +
theme_bw()
ggplot(na_merged_data, aes( y = ABV)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('ABV Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(data = fil_na_merged_data, aes(y=ABV)) +
geom_boxplot(aes(fill=ABV)) +
theme_bw()
ggplot(na_merged_data, aes( y = IBU)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('IBU Boxplot with Outliers in Red') + theme_USGS_box()
ggplot(na_merged_data, aes( y = Ounces)) + geom_boxplot(outlier.colour="red",
outlier.size=2) + ggtitle('Ounces Boxplot with Outliers in Red') + theme_USGS_box()
na_merged_data %>% ggplot(aes(x = ABV)) + geom_histogram(fill = "blue", color = "black") + ggtitle('Distribution of ABV Variable')
na_merged_data %>% ggplot(aes(x = ABV)) + geom_histogram(fill = IBU, color = "black") + ggtitle('Distribution of ABV Variable')
na_merged_data %>% ggplot(aes(x = ABV)) + geom_histogram(fill = IBU, color = "black") + ggtitle('Distribution of ABV Variable')
na_merged_data %>% ggplot(aes(x = ABV)) + geom_histogram(fill = "blue", color = "black") + ggtitle('Distribution of ABV Variable')
na_merged_data %>% ggplot(aes(x = ABV, y = IBU)) + geom_point() + geom_smooth(method='lm') + ggtitle('Relationship between ABV and IBU')
library(class)
library(caret)
library(e1071)
knn_data = na_merged_data %>%
mutate(Ale_Type = case_when(
grepl("IPA",na_merged_data$Style)==TRUE ~ "IPA",
grepl("Ale",na_merged_data$Style)==TRUE ~ "Other Ale",
TRUE ~ "other"
)
)
knn_select_data = knn_data %>% filter(Ale_Type=="IPA" | Ale_Type=="Other Ale")
for(j in 1:iterations)
{
accs = data.frame(accuracy = numeric(30), k = numeric(30))
trainIndices = sample(1:dim(knn_select_data)[1],round(splitPerc * dim(knn_select_data)[1]))
train = knn_select_data[trainIndices,]
test = knn_select_data[-trainIndices,]
for(i in 1:numks)
{
classifications = knn(train[,c(4,5)],test[,c(4,5)],train$Ale_Type, prob = TRUE, k = i)
table(classifications,test$Ale_Type)
CM = confusionMatrix(table(classifications,test$Ale_Type))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
set.seed(6)
splitPerc = .75
iterations = 100
numks = 30
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations)
{
accs = data.frame(accuracy = numeric(30), k = numeric(30))
trainIndices = sample(1:dim(knn_select_data)[1],round(splitPerc * dim(knn_select_data)[1]))
train = knn_select_data[trainIndices,]
test = knn_select_data[-trainIndices,]
for(i in 1:numks)
{
classifications = knn(train[,c(4,5)],test[,c(4,5)],train$Ale_Type, prob = TRUE, k = i)
table(classifications,test$Ale_Type)
CM = confusionMatrix(table(classifications,test$Ale_Type))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
MeanAcc = colMeans(masterAcc)
MeanAcc
plot(seq(1,numks,1),MeanAcc, type = "l")
max(MeanAcc)
trainIndices = sample(1:dim(knn_select_data)[1],round(splitPerc * dim(knn_select_data)[1]))
train = knn_select_data[trainIndices,]
test = knn_select_data[-trainIndices,]
#Filtered to keep the IPA and Other Ale's for training/test data.
knn_select_data = knn_data %>% filter(Ale_Type=="IPA" | Ale_Type=="Other Ale")
trainIndices = sample(1:dim(knn_select_data)[1],round(splitPerc * dim(knn_select_data)[1]))
train = knn_select_data[trainIndices,]
test = knn_select_data[-trainIndices,]
classifications = knn(train[,c(4,5)],test[,c(4,5)],train$Ale_Type, prob = TRUE, k = 5)
table(test$Ale_Type,classifications)
confusionMatrix(table(test$Ale_Type,classifications))
library(ggplot2)
library(maps)
library(dplyr)
library(mapproj)
Acu = read.csv(file.choose(),header = TRUE) # read in company data
colnames(Acu)[2] = "abb" # Change Column Name
Acu2 = merge(Acu,lookup,"abb") # make one dataset with state names and abb
AcuMapData = count(Acu2,State
colnames(AcuMapData)[2] = "AcuSpikes" #change "n" to "Acuspikes"
AcuMapData$region <- tolower(AcuMapData$State)
AcuMapData2 = AcuMapData[-1]
states <- map_data("state")
map.df <- merge(states,AcuMapData2, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=AcuSpikes))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Acuspike Systems by State")+
coord_map()
Acu = read.csv(file.choose(),header = TRUE) # read in company data
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
colnames(Acu)[2] = "abb" # Change Column Name
Acu2 = merge(Acu,lookup,"abb") # make one dataset with state names and abb
AcuMapData = count(Acu2,State) #count up the occurance of each state.
#AcuMapData = AcuMapData[-c(5,9,43),] #Shows contrast between other states better
colnames(AcuMapData)[2] = "AcuSpikes" #change "n" to "Acuspikes"
AcuMapData$region <- tolower(AcuMapData$State)
AcuMapData2 = AcuMapData[-1]
states <- map_data("state")
map.df <- merge(states,AcuMapData2, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=AcuSpikes))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Acuspike Systems by State")+
coord_map()
```
TotalStateCount%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('All States with the Most Breweries') + geom_text(aes(label = State), vjust = -0.5)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries')+ geom_text(aes(label = count(State)), vjust = -0.5)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries')
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -0.5)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = 0)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = 1)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -1)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n))
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n))
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -0.5)
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -0.5) + ylab("Number of States")
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianABV),y=medianABV, fill=State)) +
xlab("State")+
geom_col() + coord_flip() + ggtitle('Highest Median Alcohol Content by State') + geom_text(aes(label = medianABV), vjust = -0.5) + ylab("MedianABU")
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianABV),y=medianABV, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Highest Median Alcohol Content by State') + geom_text(aes(label = medianABV), vjust = -0.5) + ylab("MedianABU")
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianABV),y=medianABV, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Highest Median Alcohol Content by State') + geom_text(aes(label = medianABV), vjust = -0.5) + ylab("MedianABV")
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianABV),y=medianABV, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Highest Median Alcohol Content by State') + geom_text(aes(label = medianABV), vjust = -0.5) + ylab("Median ABV")
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianIBU),y=medianIBU, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Highest Median International Bitterness Unit by State') + geom_text(aes(label = medianIBU), vjust = -0.5) + ylab("Median IBU")
#Display which columns consist of NA values
sapply(merged_data, function(x) sum(is.na(x)))
#Visualization of NA Values
gg_miss_var(merged_data)
#Get the Max IBU per state
maxIBU = na_merged_data %>% group_by(State) %>% summarise(MaxIBU.per.State = max(IBU)) %>% arrange(desc(MaxIBU.per.State))
head(maxIBU,3)
head(maxABV,3)
#Plot of the top 10 states with the highest IBU
maxIBU %>%
head(10)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU')
maxIBU %>%
head(10)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU') + geom_text(aes(label = MaxIBU.per.State), vjust = -0.5) + ylab("Max IBU")
maxABV%>%
head(10)%>%
ggplot(aes(x=reorder(State,MaxABV.per.State),y=MaxABV.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max ABV')+ geom_text(aes(label = MaxABV.per.State), vjust = -0.5) + ylab("Max ABV")
na_merged_data %>% ggplot(aes(x = ABV)) + geom_histogram(fill = "blue", color = "black") + ggtitle('Distribution of ABV Variable')
na_merged_data %>% ggplot(aes(x = ABV, y = IBU)) + geom_point() + geom_smooth(method='lm') + ggtitle('Relationship between ABV and IBU')
#Display which columns consist of NA values
sapply(merged_data, function(x) sum(is.na(x)))
median_data%>%
head(10)%>%
ggplot(aes(x=reorder(State,medianABV),y=medianABV, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Highest Median Alcohol Content by State') + geom_text(aes(label = medianABV), vjust = -0.5) + ylab("Median ABV")
summarise(na_merged_data)
na_merged_data
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -0.5) + ylab("Number of States")
maxIBU %>%
head(10)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU') + geom_text(aes(label = MaxIBU.per.State), vjust = -0.5) + ylab("Max IBU")
#Plot of the top 10 states with the highest IBU
maxIBU %>%
head(3)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU') + geom_text(aes(label = MaxIBU.per.State), vjust = -0.5) + ylab("Max IBU")
maxIBU %>%
head(5)%>%
ggplot(aes(x=reorder(State,MaxIBU.per.State),y=MaxIBU.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max IBU') + geom_text(aes(label = MaxIBU.per.State), vjust = -0.5) + ylab("Max IBU")
#Plot of the top 5 states with the highest IBU
maxABV%>%
head(5)%>%
ggplot(aes(x=reorder(State,MaxABV.per.State),y=MaxABV.per.State, fill=State)) +
xlab("State")+
geom_col()  + ggtitle('States with the Highest Max ABV')+ geom_text(aes(label = MaxABV.per.State), vjust = -0.5) + ylab("Max ABV")
#6. Comment on the summary statistics and distribution of the ABV variable.
summarize(na_merged_data)
#6. Comment on the summary statistics and distribution of the ABV variable.
summarise(na_merged_data)
#6. Comment on the summary statistics and distribution of the ABV variable.
summary(na_merged_data)
#Confusion Matrix
confusionMatrix(table(test$Ale_Type,classifications))
beer = read.csv(file.choose(), header = TRUE)
breweries = read.csv(file.choose(), header = TRUE)
beer
breweries
library(dplyr)
#Merged both datasets on Brewery ID
merged_data = merge(beer, breweries, by.x = "Brewery_id", by.y = "Brew_ID")
#Renamed columns
colnames(merged_data)[2] = "Beer_Name"
colnames(merged_data)[8] = "Brewery_Name"
#Print the first and last six observations
head(merged_data,6)
tail(merged_data,6)
#All states with most breweries
TotalStateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
TotalStateCount
#Top ten states with most breweries.
StateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -0.5) + ylab("Number of States")
#All states with most breweries
StateCount = breweries %>% group_by(State) %>% count(State) %>% arrange(desc(n))
StateCount%>%
head(10)%>%
ggplot(aes(x=reorder(State,n),y=n, fill=State)) +
xlab("State")+
geom_col() + ggtitle('Top 10 State with the Most Breweries') + geom_text(aes(label = n), vjust = -0.5) + ylab("Number of States")
na_merged_data %>% ggplot(aes(x = ABV, y = IBU)) + geom_point() + geom_smooth(method='lm') + ggtitle('Relationship between ABV and IBU')
